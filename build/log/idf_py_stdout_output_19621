[1/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/debouncedInput.c.obj
[2/11] Performing build step for 'bootloader'
[1/1] cd /home/phillip/source/repos/AlarmController/build/bootloader/esp-idf/esptool_py && /home/phillip/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/phillip/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/phillip/source/repos/AlarmController/build/bootloader/bootloader.bin
Bootloader binary size 0x60e0 bytes. 0xf20 bytes (14%) free.
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/inputOutput.c.obj
/home/phillip/source/repos/AlarmController/main/inputOutput.c: In function 'initialiseInputs':
/home/phillip/source/repos/AlarmController/main/inputOutput.c:74:32: warning: assignment to 'int' from 'int (*)(gpio_num_t)' makes integer from pointer without a cast [-Wint-conversion]
   74 |         inputs[i].currentState = gpio_get_level;
      |                                ^
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[5/9] Linking C static library esp-idf/main/libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable alarm_controller.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/phillip/source/repos/AlarmController/build/alarm_controller.bin
[9/9] cd /home/phillip/source/repos/AlarmController/build/esp-idf/esptool_py && /home/phillip/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/phillip/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/phillip/source/repos/AlarmController/build/partition_table/partition-table.bin /home/phillip/source/repos/AlarmController/build/alarm_controller.bin
alarm_controller.bin binary size 0x9de60 bytes. Smallest app partition is 0x200000 bytes. 0x1621a0 bytes (69%) free.
